// Ejemplo donde logramos que las luces titilen

Luces = AmbasApagadas,
AmbasApagadas = (prender_derecha -> DerechaPrendida | prender_izquierda -> IzquierdaPrendida),
DerechaPrendida = (apagar -> AmbasApagadas | prender_izquierda -> AmbasPrendidas),
IzquierdaPrendida = (apagar -> AmbasApagadas | prender_derecha -> AmbasPrendidas),
AmbasPrendidas = (apagar -> AmbasApagadas).

||Auto = (Luces).

set Controlables = {apagar, prender_derecha, prender_izquierda}

fluent PrendeDerecha = <prender_derecha, apagar> initially 0
fluent PrendeIzquierda = <prender_izquierda, apagar> initially 0 

ltl_property NuncaAmbas = []!(PrendeDerecha && PrendeIzquierda)

controllerSpec ControlSpec = {
		safety = {NuncaAmbas}
        assumption = {}
        liveness = {PrendeDerecha, PrendeIzquierda}
        controllable = {Controlables}
}

controller ||Controller = (Auto)~{ControlSpec}.
minimal ||UPDATE_CONTROLLER = (Auto || Controller).
